# Default values for docker-registry.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

updateStrategy:
  # type: RollingUpdate
  # rollingUpdate:
  #   maxSurge: 1
  #   maxUnavailable: 0

podAnnotations: {}
podLabels: {}

image:
  repository: registry
  tag: 2.7.1
  pullPolicy: IfNotPresent
# imagePullSecrets:
# - name: docker
service:
  name: registry
  type: ClusterIP
  # clusterIP:
  port: 5000
  # nodePort:
  annotations: {}
  # foo.io/bar: "true"
ingress:
  enabled: true
  path: /
  # Used to create an Ingress record.
  hosts:
    - registry.test.wx-coder.cn
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: '0'
    kubernetes.io/ingress.class: 'nginx'
    certmanager.k8s.io/issuer: 'letsencrypt-prod'
    # kubernetes.io/tls-acme: "true"
  labels: {}
  tls:
    - secretName: docker-registry-tls
      hosts:
        - registry.test.wx-coder.cn
    # Secrets must be manually created in the namespace.
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local
resources: {}

persistence:
  enabled: true
  existingClaim: pvc-docker-registry

# set the type of filesystem to use: filesystem, s3
storage: filesystem

# Set this to name of secret for tls certs
# tlsSecretName: registry.docker.example.com
secrets:
  haSharedSecret: ''
  htpasswd: 'test:$2y$05$LpHzH7fZ7MULIQiSvnunBekjX83SkMCwGQfKKCuKK7n1kpnxTaEZe'

configData:
  version: 0.1
  log:
    fields:
      service: registry
  storage:
    cache:
      blobdescriptor: inmemory
  http:
    addr: :5000
    headers:
      X-Content-Type-Options: [nosniff]
  health:
    storagedriver:
      enabled: true
      interval: 10s
      threshold: 3

securityContext:
  enabled: true
  runAsUser: 1000
  fsGroup: 1000

priorityClassName: ''

podDisruptionBudget: {}

nodeSelector: {}

tolerations: []
